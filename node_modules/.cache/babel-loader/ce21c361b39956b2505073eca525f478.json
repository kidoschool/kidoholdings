{"ast":null,"code":"var _jsxFileName = \"/home/kido3/Desktop/kido/kidoholdings/src/components/Map/Map3.js\";\nimport React, { Component } from \"react\";\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from \"google-maps-react\";\nimport mapIcoUrl from \"../../assets/blue-dot.png\";\nimport { isMobile } from \"react-device-detect\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Map3 extends Component {\n  constructor(props) {\n    super(props);\n    this.onMarkerClick = this.onMarkerClick.bind(this);\n    this.state = {\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {}\n    };\n  }\n\n  onMarkerClick(props, marker, e) {\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n  }\n\n  _mapLoaded(mapProps, map) {\n    const mapStyle = require('./MapStyle.json');\n\n    map.setOptions({\n      styles: mapStyle\n    });\n  }\n\n  render() {\n    if (!this.props.google) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 14\n      }, this);\n    }\n\n    const icon = {\n      url: mapIcoUrl\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        height: isMobile ? \"350px\" : \"650px\",\n        width: \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Map, {\n        onReady: (mapProps, map) => this._mapLoaded(mapProps, map),\n        google: this.props.google,\n        zoom: this.props.map_zoom,\n        defaultZoom: 1,\n        initialCenter: this.props.map_centre,\n        center: this.props.map_centre,\n        zoomControl: false,\n        mapTypeControl: false,\n        scaleControl: false,\n        fullscreenControl: false,\n        scrollwheel: false,\n        disableDoubleClickZoom: true,\n        children: Object.entries(this.props.centerContents1[\"centers\"]).map((item, k) => {\n          return /*#__PURE__*/_jsxDEV(Marker, {\n            icon: icon,\n            position: {\n              lat: item[1].lat,\n              lng: item[1].lng\n            },\n            onClick: this.onMarkerClick,\n            name: item[1].id,\n            children: /*#__PURE__*/_jsxDEV(InfoWindow, {\n              marker: item[1].id,\n              visible: this.state.showingInfoWindow,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: this.state.selectedPlace.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 92\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 87\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyCIJkPLyzo5XZODdhxAa_XYbk2ESQpJyZw\",\n  v: \"3.30\"\n})(Map3);\n;","map":{"version":3,"sources":["/home/kido3/Desktop/kido/kidoholdings/src/components/Map/Map3.js"],"names":["React","Component","Map","InfoWindow","Marker","GoogleApiWrapper","mapIcoUrl","isMobile","Map3","constructor","props","onMarkerClick","bind","state","showingInfoWindow","activeMarker","selectedPlace","marker","e","setState","_mapLoaded","mapProps","map","mapStyle","require","setOptions","styles","render","google","icon","url","position","height","width","map_zoom","map_centre","Object","entries","centerContents1","item","k","lat","lng","id","name","apiKey","v"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from \"google-maps-react\";\nimport mapIcoUrl from \"../../assets/blue-dot.png\";\nimport { isMobile } from \"react-device-detect\";\n\n\nexport class Map3 extends Component {\n  constructor(props) {\n    super(props);\n    this.onMarkerClick = this.onMarkerClick.bind(this);\n    this.state = {\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {}\n    };\n  }\n  \n\n  onMarkerClick(props, marker, e) {\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n  };\n\n_mapLoaded(mapProps, map) {\n  const mapStyle = require('./MapStyle.json');\n  map.setOptions({\n     styles: mapStyle\n  })\n}\n  render() {\n    if (!this.props.google) {\n      return <div>Loading...</div>;\n    }\n\n   const icon={\n      url: mapIcoUrl\n    }\n\n    \n\n    return (\n      \n      <div\n        style={{\n          position: \"relative\",\n          height: isMobile ? \"350px\" : \"650px\",\n          width: \"100%\",\n        }}\n      >\n        <Map onReady={(mapProps, map) => this._mapLoaded(mapProps, map)} google={this.props.google} zoom={this.props.map_zoom}  defaultZoom={1} initialCenter={this.props.map_centre} center={this.props.map_centre} zoomControl={false} mapTypeControl={false} scaleControl={false} fullscreenControl={false} scrollwheel={false} disableDoubleClickZoom={true} >\n        {Object.entries(this.props.centerContents1[\"centers\"]).map((item,k) => {\n            return <Marker icon={icon} position={{lat: item[1].lat, lng: item[1].lng}} onClick={this.onMarkerClick} name={item[1].id  }>\n              <InfoWindow marker={item[1].id} visible={this.state.showingInfoWindow} ><div><h3>{this.state.selectedPlace.name}</h3></div></InfoWindow>\n              </Marker>\n            })\n        }\n        {/* <InfoWindow marker={this.state.activeMarker} visible={this.state.showingInfoWindow} ><div><h3>{this.state.selectedPlace.name}</h3></div></InfoWindow> */}\n        </Map>\n      </div>\n    );\n  }\n}\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyCIJkPLyzo5XZODdhxAa_XYbk2ESQpJyZw\",\n  v: \"3.30\"\n})(Map3);\n;"]},"metadata":{},"sourceType":"module"}